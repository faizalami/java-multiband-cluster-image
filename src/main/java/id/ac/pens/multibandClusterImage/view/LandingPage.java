/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.ac.pens.multibandClusterImage.view;

import id.ac.pens.multibandClusterImage.MultibandCluster;
import id.ac.pens.multibandClusterImage.model.ClusterColor;
import id.ac.pens.multibandClusterImage.model.FileTypeFilter;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;

/**
 *
 * @author rhr
 */
public class LandingPage extends javax.swing.JFrame {

    /**
     * Creates new form LandingPage
     */
    private File[] pictures;
    private ArrayList<int[][]> matrix = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_Judul = new javax.swing.JLabel();
        jTextField_search = new javax.swing.JTextField();
        jButton_search = new javax.swing.JButton();
        jPanelSource = new javax.swing.JPanel();
        jButton_process = new javax.swing.JButton();
        jPanelResult = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_Judul.setText("Multiband Image Clustering");

        jTextField_search.setText("Search Your Image");

        jButton_search.setText("Search");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_search)
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_Judul, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
            .addComponent(jPanelSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_Judul)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton_search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSource, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        );

        jButton_process.setText("Process");
        jButton_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_processActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_process, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelResult, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_process, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelResult, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Please Select Multiband Images");
        chooser.setMultiSelectionEnabled(true);
        chooser.setFileFilter(new FileTypeFilter(".jpg", "JPG"));
        chooser.setFileFilter(new FileTypeFilter(".jpeg", "JPEG"));
        chooser.setFileFilter(new FileTypeFilter(".gif", "GIF"));
        chooser.setFileFilter(new FileTypeFilter(".png", "PNG"));
        if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            jTextField_search.setText(filename);
            pictures = chooser.getSelectedFiles();
            for(File picture :pictures){
                JLabel JLabelPicture = new JLabel(new ImageIcon(picture.getAbsolutePath()));
                jPanelSource.add(JLabelPicture);
            }
            revalidate();
            repaint();
        }
    }//GEN-LAST:event_jButton_searchActionPerformed

    private void jButton_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_processActionPerformed
        // TODO add your handling code here:
        BufferedImage img = null;
        for(int z=0; z<pictures.length; z++){
            try{
                img = ImageIO.read(pictures[z]);
                //Image for grayscaling result
                BufferedImage grayscaleImage = new BufferedImage(img.getWidth(), img.getHeight(), BufferedImage.TYPE_INT_ARGB);
                int[][] pixel = new int[16][16];
                for(int i=0; i<img.getWidth(); i++){
                    for(int j=0; j<img.getWidth(); j++){
                        Color c = new Color(img.getRGB(j, i));
                        int r = c.getRed();
                        int g = c.getGreen();
                        int b = c.getBlue();
                        int a = c.getAlpha();
                        
                        int gr = (r + g + b)/3;
                        pixel[i][j] = gr;
                        
                        Color gColor = new Color(gr, gr, gr, a);
                        grayscaleImage.setRGB(j, i, gColor.getRGB());
                        
                    }
                }
                matrix.add(pixel);
            }
            catch(IOException e){
                e.printStackTrace();
            }
            
        }
        
        MultibandCluster cluster = new MultibandCluster(3);
        
        for(int[][] image : matrix) {
            cluster.addImage(image);
        }
        cluster.convertImgToDataSet();
        cluster.initDistance();
        cluster.clusterAverage();
        ArrayList<ArrayList<Integer>> clusterMatrix = cluster.convertClusterToImage();
        
        
        BufferedImage clusterImage = new BufferedImage(cluster.getWidth(), cluster.getHeight(), BufferedImage.TYPE_INT_ARGB);
        ArrayList<ClusterColor> clusterColors = new ArrayList<ClusterColor>();
        
        for (int cls : cluster.getClusters()) {
            Random rand = new Random();
            float r = rand.nextFloat();
            float g = rand.nextFloat();
            float b = rand.nextFloat();
            
            clusterColors.add(new ClusterColor(cls, new Color(r, g, b)));
        }
        
        
        for (int i = 0; i < clusterMatrix.size(); i++) {
            for (int j = 0; j < clusterMatrix.get(i).size(); j++) {
                Color pixelColor = Color.BLACK;
                for (ClusterColor clusterColor : clusterColors) {
                    if (clusterColor.getCluster() == clusterMatrix.get(i).get(j)) {
                        pixelColor = clusterColor.getColor();
                    }
                }
                clusterImage.setRGB(i, j, pixelColor.getRGB());
            }
        }
        
        JLabel jLabelCluster = new JLabel(new ImageIcon(clusterImage));
        jPanelResult.add(jLabelCluster, BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_jButton_processActionPerformed

    /**
     * @param args the command line arguments
     */
    public LandingPage() {
        initComponents();
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_process;
    private javax.swing.JButton jButton_search;
    private javax.swing.JLabel jLabel_Judul;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelResult;
    private javax.swing.JPanel jPanelSource;
    private javax.swing.JTextField jTextField_search;
    // End of variables declaration//GEN-END:variables
}
